conn: 
    server_worker_num: &ref_server_worker_num 1
    server_ip: 127.0.0.1
    server_frontend_port: 5555
    server_backend_port: 5556
    client_num: 4
    client_retries: 3
    client_timeout: 2500   #ms

RL:
    method: 'DQN'
    # train_multi_steps: 1       # default: 1, param: 'if_down', 'steps(int)'-> train if down or train after steps    
    reward_gamma: 0.99
    reward_factor: 0.01            # default: 1
    reward_reverse: yes           # dafault: False
    add_data_steps: 'if_down'     # dafault: 1 , param: 'if_down', 'steps(int)'    
    exploration: 500        # train after exploration step
    action_noise: 'epsilon-greedy'

DQN:
    memory_capacity: 5000
    memory_train_min: 500 
    batch_size: 100
    update_Q_target_times: 10
    lr: 0.01

epsilon-greedy:
    value: 1.0
    discount: 0.01   # each step discount it  

NN:
    fc_1: # use default op:'relu' and initializer: 'truncated_normal'
        type: 'fc'
        size: 200
        bias_const: 0.03

    fc_2:
        type: 'fc'
        size: 100
        bias_const: 0.03

misc:
    model_save_cycle: 30
    gpu_memory_ratio: 0.3
    random_seed: 83             
    max_ep:  200                       # defualt:1000, over the ep will auto exit()
    render: yes                        # defualt: false, render the env 
    render_after_ep: 100                # defualt: 0, render afet the ep 
    gym_env: 'CartPole-v0'
    gym_monitor_path: 'monitor/'        # will crate in data_pool/<project_name>/monitor/
    gym_monitor_episode: 10             # record every 10 episode 