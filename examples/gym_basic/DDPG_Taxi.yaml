conn: 
    server_worker_num: &ref_server_worker_num 1
    server_ip: 127.0.0.1
    server_frontend_port: 5555
    server_backend_port: 5556
    client_num: 4
    client_retries: 3
    client_timeout: 2500   #ms

RL:
    method: 'DDPG'
    train_multi_steps: 50       # default: 1, param: 'if_down', 'steps(int)'-> train if down or train after steps    
    reward_gamma: 0.99
    reward_factor: 0.01            # default: 1
    reward_reverse: yes           # dafault: False
    add_data_steps: 'if_down'     # dafault: 1 , param: 'if_down', 'steps(int)'    
    exploration: 300        # train after exploration step
    action_noise: 'epsilon-greedy'

DDPG:
    lr_actor:  0.0001  # learning rate for actor (1e-4)
    lr_critic:  0.001  # learning rate for critic
    memory_capacity: 10000
    memory_train_min: 2000 
    batch_size: 1000          
    tau: 0.001              # the factor about update network with target network
    
epsilon-greedy:
    value: 1.0
    discount: 0.02    # each step discount it  

actor_NN:
    actor_fc_1: # use default op:'relu' and initializer: 'truncated_normal'
        type: 'fc'
        size: 400
        bias_const: 0.03

    actor_fc_2:
        type: 'fc'
        size: 300
        bias_const: 0.03

critic_state_NN:
    state_fc_1: # use default op:'relu' and initializer: 'truncated_normal'
        type: 'fc'
        size: 400
        bias_const: 0.03

    state_fc_2:
        type: 'fc'
        size: 300
        bias_const: 0.03
        op: 'relu'


critic_action_NN:
    action_fc_1: # use default op:'relu' and initializer: 'truncated_normal'
        type: 'fc'
        size: 300
        bias_const: 0.03
        op: 'relu'
        
misc:
    model_save_cycle: 30
    gpu_memory_ratio: 0.3
    random_seed: 82             # t_82 get max reward = 114.10
    max_ep:  5000                       # defualt:1000, over the ep will auto exit()
    render: no                        # defualt: false, render the env 
    render_after_ep: 400                # defualt: 0, render afet the ep 
    gym_env: 'Taxi-v2'
    gym_monitor_path: 'monitor/'        # will crate in data_pool/<project_name>/monitor/
    gym_monitor_episode: 50             # record every 10 episode 